version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: wageguard
      POSTGRES_USER: wageguard
      POSTGRES_PASSWORD: wageguard_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wageguard"]
      interval: 10s
      timeout: 5s
      retries: 5

  # WageGuard Application
  wageguard:
    build: .
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://wageguard:wageguard_password@postgres:5432/wageguard
      JWT_SECRET: your_jwt_secret_change_in_production
      SESSION_SECRET: your_session_secret_change_in_production
      # Add your AI provider API keys here
      # ANTHROPIC_API_KEY: your_anthropic_key
      # OPENAI_API_KEY: your_openai_key
      # GOOGLE_API_KEY: your_google_key
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - uploads:/app/uploads
      - reports:/app/reports
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  uploads:
  reports:
